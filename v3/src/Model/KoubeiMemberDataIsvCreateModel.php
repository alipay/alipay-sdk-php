<?php
/**
 * KoubeiMemberDataIsvCreateModel
 *
 * PHP version 7.4
 *
 * @category Class
 * @package  Alipay\OpenAPISDK
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * 支付宝开放平台API
 *
 * 支付宝开放平台v3协议文档
 *
 * The version of the OpenAPI document: 2023-04-19
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 6.2.1
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace Alipay\OpenAPISDK\Model;

use \ArrayAccess;
use \Alipay\OpenAPISDK\ObjectSerializer;

/**
 * KoubeiMemberDataIsvCreateModel Class Doc Comment
 *
 * @category Class
 * @package  Alipay\OpenAPISDK
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 * @implements \ArrayAccess<TKey, TValue>
 * @template TKey int|null
 * @template TValue mixed|null
 */
class KoubeiMemberDataIsvCreateModel implements ModelInterface, ArrayAccess, \JsonSerializable
{
    public const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $openAPIModelName = 'KoubeiMemberDataIsvCreateModel';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPITypes = [
        'gmtMemberCardLastActive' => 'string',
        'gmtMerberCardCreate' => 'string',
        'memberCardId' => 'string',
        'memberCardType' => 'string',
        'memberShip' => '\Alipay\OpenAPISDK\Model\MemberShip',
        'memberSource' => 'string',
        'memberSourceDesc' => 'string',
        'memberStatus' => 'string',
        'outerMemberInfo' => '\Alipay\OpenAPISDK\Model\OuterMemberInfo',
        'parterId' => 'string',
        'shopId' => 'string'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      * @phpstan-var array<string, string|null>
      * @psalm-var array<string, string|null>
      */
    protected static $openAPIFormats = [
        'gmtMemberCardLastActive' => null,
        'gmtMerberCardCreate' => null,
        'memberCardId' => null,
        'memberCardType' => null,
        'memberShip' => null,
        'memberSource' => null,
        'memberSourceDesc' => null,
        'memberStatus' => null,
        'outerMemberInfo' => null,
        'parterId' => null,
        'shopId' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPITypes()
    {
        return self::$openAPITypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPIFormats()
    {
        return self::$openAPIFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'gmtMemberCardLastActive' => 'gmt_member_card_last_active',
        'gmtMerberCardCreate' => 'gmt_merber_card_create',
        'memberCardId' => 'member_card_id',
        'memberCardType' => 'member_card_type',
        'memberShip' => 'member_ship',
        'memberSource' => 'member_source',
        'memberSourceDesc' => 'member_source_desc',
        'memberStatus' => 'member_status',
        'outerMemberInfo' => 'outer_member_info',
        'parterId' => 'parter_id',
        'shopId' => 'shop_id'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'gmtMemberCardLastActive' => 'setGmtMemberCardLastActive',
        'gmtMerberCardCreate' => 'setGmtMerberCardCreate',
        'memberCardId' => 'setMemberCardId',
        'memberCardType' => 'setMemberCardType',
        'memberShip' => 'setMemberShip',
        'memberSource' => 'setMemberSource',
        'memberSourceDesc' => 'setMemberSourceDesc',
        'memberStatus' => 'setMemberStatus',
        'outerMemberInfo' => 'setOuterMemberInfo',
        'parterId' => 'setParterId',
        'shopId' => 'setShopId'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'gmtMemberCardLastActive' => 'getGmtMemberCardLastActive',
        'gmtMerberCardCreate' => 'getGmtMerberCardCreate',
        'memberCardId' => 'getMemberCardId',
        'memberCardType' => 'getMemberCardType',
        'memberShip' => 'getMemberShip',
        'memberSource' => 'getMemberSource',
        'memberSourceDesc' => 'getMemberSourceDesc',
        'memberStatus' => 'getMemberStatus',
        'outerMemberInfo' => 'getOuterMemberInfo',
        'parterId' => 'getParterId',
        'shopId' => 'getShopId'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$openAPIModelName;
    }


    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['gmtMemberCardLastActive'] = $data['gmtMemberCardLastActive'] ?? null;
        $this->container['gmtMerberCardCreate'] = $data['gmtMerberCardCreate'] ?? null;
        $this->container['memberCardId'] = $data['memberCardId'] ?? null;
        $this->container['memberCardType'] = $data['memberCardType'] ?? null;
        $this->container['memberShip'] = $data['memberShip'] ?? null;
        $this->container['memberSource'] = $data['memberSource'] ?? null;
        $this->container['memberSourceDesc'] = $data['memberSourceDesc'] ?? null;
        $this->container['memberStatus'] = $data['memberStatus'] ?? null;
        $this->container['outerMemberInfo'] = $data['outerMemberInfo'] ?? null;
        $this->container['parterId'] = $data['parterId'] ?? null;
        $this->container['shopId'] = $data['shopId'] ?? null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets gmtMemberCardLastActive
     *
     * @return string|null
     */
    public function getGmtMemberCardLastActive()
    {
        return $this->container['gmtMemberCardLastActive'];
    }

    /**
     * Sets gmtMemberCardLastActive
     *
     * @param string|null $gmtMemberCardLastActive 会员卡最近一次激活时间，格式：yyyy-MM-dd HH:MM:ss
     *
     * @return self
     */
    public function setGmtMemberCardLastActive($gmtMemberCardLastActive)
    {
        $this->container['gmtMemberCardLastActive'] = $gmtMemberCardLastActive;

        return $this;
    }

    /**
     * Gets gmtMerberCardCreate
     *
     * @return string|null
     */
    public function getGmtMerberCardCreate()
    {
        return $this->container['gmtMerberCardCreate'];
    }

    /**
     * Sets gmtMerberCardCreate
     *
     * @param string|null $gmtMerberCardCreate 会员卡领取时间（开卡时间），格式：yyyy-MM-dd HH:mm:ss
     *
     * @return self
     */
    public function setGmtMerberCardCreate($gmtMerberCardCreate)
    {
        $this->container['gmtMerberCardCreate'] = $gmtMerberCardCreate;

        return $this;
    }

    /**
     * Gets memberCardId
     *
     * @return string|null
     */
    public function getMemberCardId()
    {
        return $this->container['memberCardId'];
    }

    /**
     * Sets memberCardId
     *
     * @param string|null $memberCardId 会员卡卡号：唯一标识会员卡的ID，partner_id+member_card_id是唯一主键，若partner_id+member_card_id已存在，则做更新会员卡操作。
     *
     * @return self
     */
    public function setMemberCardId($memberCardId)
    {
        $this->container['memberCardId'] = $memberCardId;

        return $this;
    }

    /**
     * Gets memberCardType
     *
     * @return string|null
     */
    public function getMemberCardType()
    {
        return $this->container['memberCardType'];
    }

    /**
     * Sets memberCardType
     *
     * @param string|null $memberCardType 会员卡类型：  微卡、炫酷卡、儿童卡、璀璨卡、金卡银卡、白金卡等
     *
     * @return self
     */
    public function setMemberCardType($memberCardType)
    {
        $this->container['memberCardType'] = $memberCardType;

        return $this;
    }

    /**
     * Gets memberShip
     *
     * @return \Alipay\OpenAPISDK\Model\MemberShip|null
     */
    public function getMemberShip()
    {
        return $this->container['memberShip'];
    }

    /**
     * Sets memberShip
     *
     * @param \Alipay\OpenAPISDK\Model\MemberShip|null $memberShip memberShip
     *
     * @return self
     */
    public function setMemberShip($memberShip)
    {
        $this->container['memberShip'] = $memberShip;

        return $this;
    }

    /**
     * Gets memberSource
     *
     * @return string|null
     */
    public function getMemberSource()
    {
        return $this->container['memberSource'];
    }

    /**
     * Sets memberSource
     *
     * @param string|null $memberSource 会员来源：  1：weixin（微信）；2：alipay（支付宝）；3：offline（线下会员卡）；4：other（其他）
     *
     * @return self
     */
    public function setMemberSource($memberSource)
    {
        $this->container['memberSource'] = $memberSource;

        return $this;
    }

    /**
     * Gets memberSourceDesc
     *
     * @return string|null
     */
    public function getMemberSourceDesc()
    {
        return $this->container['memberSourceDesc'];
    }

    /**
     * Sets memberSourceDesc
     *
     * @param string|null $memberSourceDesc 会员来源描述：如美团、饿了么等
     *
     * @return self
     */
    public function setMemberSourceDesc($memberSourceDesc)
    {
        $this->container['memberSourceDesc'] = $memberSourceDesc;

        return $this;
    }

    /**
     * Gets memberStatus
     *
     * @return string|null
     */
    public function getMemberStatus()
    {
        return $this->container['memberStatus'];
    }

    /**
     * Sets memberStatus
     *
     * @param string|null $memberStatus 会员状态：  1：生效；0：失效
     *
     * @return self
     */
    public function setMemberStatus($memberStatus)
    {
        $this->container['memberStatus'] = $memberStatus;

        return $this;
    }

    /**
     * Gets outerMemberInfo
     *
     * @return \Alipay\OpenAPISDK\Model\OuterMemberInfo|null
     */
    public function getOuterMemberInfo()
    {
        return $this->container['outerMemberInfo'];
    }

    /**
     * Sets outerMemberInfo
     *
     * @param \Alipay\OpenAPISDK\Model\OuterMemberInfo|null $outerMemberInfo outerMemberInfo
     *
     * @return self
     */
    public function setOuterMemberInfo($outerMemberInfo)
    {
        $this->container['outerMemberInfo'] = $outerMemberInfo;

        return $this;
    }

    /**
     * Gets parterId
     *
     * @return string|null
     */
    public function getParterId()
    {
        return $this->container['parterId'];
    }

    /**
     * Sets parterId
     *
     * @param string|null $parterId 商户的PID
     *
     * @return self
     */
    public function setParterId($parterId)
    {
        $this->container['parterId'] = $parterId;

        return $this;
    }

    /**
     * Gets shopId
     *
     * @return string|null
     */
    public function getShopId()
    {
        return $this->container['shopId'];
    }

    /**
     * Sets shopId
     *
     * @param string|null $shopId 会员卡领取的门店ID
     *
     * @return self
     */
    public function setShopId($shopId)
    {
        $this->container['shopId'] = $shopId;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset): bool
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed|null
     */
    #[\ReturnTypeWillChange]
    public function offsetGet($offset)
    {
        return $this->container[$offset] ?? null;
    }

    /**
     * Sets value based on offset.
     *
     * @param int|null $offset Offset
     * @param mixed    $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value): void
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset): void
    {
        unset($this->container[$offset]);
    }

    /**
     * Serializes the object to a value that can be serialized natively by json_encode().
     * @link https://www.php.net/manual/en/jsonserializable.jsonserialize.php
     *
     * @return mixed Returns data which can be serialized by json_encode(), which is a value
     * of any type other than a resource.
     */
    #[\ReturnTypeWillChange]
    public function jsonSerialize()
    {
       return ObjectSerializer::sanitizeForSerialization($this);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        return json_encode(
            ObjectSerializer::sanitizeForSerialization($this),
            JSON_PRETTY_PRINT
        );
    }

    /**
     * Gets a header-safe presentation of the object
     *
     * @return string
     */
    public function toHeaderValue()
    {
        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


